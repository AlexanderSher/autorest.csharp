// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core.Expressions.DataFactory;

namespace Inheritance.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class InheritanceModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.BaseClassWithDiscriminator"/>. </summary>
        /// <param name="baseClassProperty"></param>
        /// <param name="dfeString"> Any object. </param>
        /// <param name="dfeDouble"> Any object. </param>
        /// <param name="dfeBool"> Any object. </param>
        /// <param name="dfeInt"> Any object. </param>
        /// <param name="dfeObject"> Any object. </param>
        /// <param name="dfeListOfT"> Any object. </param>
        /// <param name="dfeListOfString"> Any object. </param>
        /// <param name="dfeKeyValuePairs"> Any object. </param>
        /// <param name="dfeDateTime"> Any object. </param>
        /// <param name="dfeDuration"> Any object. </param>
        /// <param name="dfeUri"> Any object. </param>
        /// <param name="discriminatorProperty"></param>
        /// <returns> A new <see cref="Models.BaseClassWithDiscriminator"/> instance for mocking. </returns>
        public static BaseClassWithDiscriminator BaseClassWithDiscriminator(string baseClassProperty = null, DataFactoryElement<string> dfeString = null, DataFactoryElement<double> dfeDouble = null, DataFactoryElement<bool> dfeBool = null, DataFactoryElement<int> dfeInt = null, DataFactoryElement<BinaryData> dfeObject = null, DataFactoryElement<IList<SeparateClass>> dfeListOfT = null, DataFactoryElement<IList<string>> dfeListOfString = null, DataFactoryElement<IDictionary<string, string>> dfeKeyValuePairs = null, DataFactoryElement<DateTimeOffset> dfeDateTime = null, DataFactoryElement<TimeSpan> dfeDuration = null, DataFactoryElement<Uri> dfeUri = null, string discriminatorProperty = null)
        {
            return new UnknownBaseClassWithDiscriminator(
                baseClassProperty,
                dfeString,
                dfeDouble,
                dfeBool,
                dfeInt,
                dfeObject,
                dfeListOfT,
                dfeListOfString,
                dfeKeyValuePairs,
                dfeDateTime,
                dfeDuration,
                dfeUri,
                discriminatorProperty);
        }

        /// <summary> Initializes a new instance of <see cref="Models.BaseClassWithExtensibleEnumDiscriminator"/>. </summary>
        /// <param name="discriminatorProperty"></param>
        /// <returns> A new <see cref="Models.BaseClassWithExtensibleEnumDiscriminator"/> instance for mocking. </returns>
        public static BaseClassWithExtensibleEnumDiscriminator BaseClassWithExtensibleEnumDiscriminator(string discriminatorProperty = "Unknown")
        {
            return new UnknownBaseClassWithExtensibleEnumDiscriminator(discriminatorProperty);
        }
    }
}
