// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;
using Multipart.Models;

namespace Multipart
{
    /// <summary> The Multipart service client. </summary>
    public partial class MultipartClient
    {
        private readonly ClientDiagnostics _clientDiagnostics;
        private readonly HttpPipeline _pipeline;
        internal MultipartRestClient RestClient { get; }

        /// <summary> Initializes a new instance of MultipartClient for mocking. </summary>
        protected MultipartClient()
        {
        }

        /// <summary> Initializes a new instance of MultipartClient. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> server parameter. </param>
        internal MultipartClient(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint = null)
        {
            RestClient = new MultipartRestClient(clientDiagnostics, pipeline, endpoint);
            _clientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
        }

        /// <param name="boolProp"> The Boolean to use. </param>
        /// <param name="intProp"> The PostContentSchemaIntProp to use. </param>
        /// <param name="numberInt32Prop"> The PostContentSchemaNumberInt32Prop to use. </param>
        /// <param name="numberInt64Prop"> The PostContentSchemaNumberInt64Prop to use. </param>
        /// <param name="numberFloatProp"> The PostContentSchemaNumberFloatProp to use. </param>
        /// <param name="numberDoubleProp"> The PostContentSchemaNumberDoubleProp to use. </param>
        /// <param name="dateProp"> The PostContentSchemaDateProp to use. </param>
        /// <param name="datetimeProp"> The PostContentSchemaDatetimeProp to use. </param>
        /// <param name="datetimeRfc1123Prop"> The PostContentSchemaDatetimeRfc1123Prop to use. </param>
        /// <param name="uuidProp"> The PostContentSchemaUuidProp to use. </param>
        /// <param name="urlProp"> The PostContentSchemaUrlProp to use. </param>
        /// <param name="objProp"> The PostContentSchemaObjProp to use. </param>
        /// <param name="fileName1"> The binary to use. </param>
        /// <param name="fileName2"> The binary to use. </param>
        /// <param name="arrayOfDatetimeProp"> The PostContentSchemaArrayOfDatetimeProp to use. </param>
        /// <param name="arrayOfObjProp"> The PostContentSchemaArrayOfObjProp to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual async Task<Response> OperationAsync(bool? boolProp = null, int? intProp = null, int? numberInt32Prop = null, long? numberInt64Prop = null, float? numberFloatProp = null, double? numberDoubleProp = null, DateTimeOffset? dateProp = null, DateTimeOffset? datetimeProp = null, DateTimeOffset? datetimeRfc1123Prop = null, Guid? uuidProp = null, Uri urlProp = null, PostContentSchemaObjProp objProp = null, Stream fileName1 = null, Stream fileName2 = null, IEnumerable<Stream> arrayOfDatetimeProp = null, IEnumerable<PostContentSchemaArrayOfObjPropItem> arrayOfObjProp = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MultipartClient.Operation");
            scope.Start();
            try
            {
                return await RestClient.OperationAsync(boolProp, intProp, numberInt32Prop, numberInt64Prop, numberFloatProp, numberDoubleProp, dateProp, datetimeProp, datetimeRfc1123Prop, uuidProp, urlProp, objProp, fileName1, fileName2, arrayOfDatetimeProp, arrayOfObjProp, cancellationToken).ConfigureAwait(false);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }

        /// <param name="boolProp"> The Boolean to use. </param>
        /// <param name="intProp"> The PostContentSchemaIntProp to use. </param>
        /// <param name="numberInt32Prop"> The PostContentSchemaNumberInt32Prop to use. </param>
        /// <param name="numberInt64Prop"> The PostContentSchemaNumberInt64Prop to use. </param>
        /// <param name="numberFloatProp"> The PostContentSchemaNumberFloatProp to use. </param>
        /// <param name="numberDoubleProp"> The PostContentSchemaNumberDoubleProp to use. </param>
        /// <param name="dateProp"> The PostContentSchemaDateProp to use. </param>
        /// <param name="datetimeProp"> The PostContentSchemaDatetimeProp to use. </param>
        /// <param name="datetimeRfc1123Prop"> The PostContentSchemaDatetimeRfc1123Prop to use. </param>
        /// <param name="uuidProp"> The PostContentSchemaUuidProp to use. </param>
        /// <param name="urlProp"> The PostContentSchemaUrlProp to use. </param>
        /// <param name="objProp"> The PostContentSchemaObjProp to use. </param>
        /// <param name="fileName1"> The binary to use. </param>
        /// <param name="fileName2"> The binary to use. </param>
        /// <param name="arrayOfDatetimeProp"> The PostContentSchemaArrayOfDatetimeProp to use. </param>
        /// <param name="arrayOfObjProp"> The PostContentSchemaArrayOfObjProp to use. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        public virtual Response Operation(bool? boolProp = null, int? intProp = null, int? numberInt32Prop = null, long? numberInt64Prop = null, float? numberFloatProp = null, double? numberDoubleProp = null, DateTimeOffset? dateProp = null, DateTimeOffset? datetimeProp = null, DateTimeOffset? datetimeRfc1123Prop = null, Guid? uuidProp = null, Uri urlProp = null, PostContentSchemaObjProp objProp = null, Stream fileName1 = null, Stream fileName2 = null, IEnumerable<Stream> arrayOfDatetimeProp = null, IEnumerable<PostContentSchemaArrayOfObjPropItem> arrayOfObjProp = null, CancellationToken cancellationToken = default)
        {
            using var scope = _clientDiagnostics.CreateScope("MultipartClient.Operation");
            scope.Start();
            try
            {
                return RestClient.Operation(boolProp, intProp, numberInt32Prop, numberInt64Prop, numberFloatProp, numberDoubleProp, dateProp, datetimeProp, datetimeRfc1123Prop, uuidProp, urlProp, objProp, fileName1, fileName2, arrayOfDatetimeProp, arrayOfObjProp, cancellationToken);
            }
            catch (Exception e)
            {
                scope.Failed(e);
                throw;
            }
        }
    }
}
